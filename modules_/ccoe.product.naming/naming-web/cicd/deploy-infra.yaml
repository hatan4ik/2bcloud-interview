# https://aka.ms/yaml
trigger: none

variables:
  workingDirectory: "$(System.DefaultWorkingDirectory)/naming-web/terraform"

stages:
  - stage: Lab
    jobs:
    - job: Deploy_Lab
      displayName: Deploy Lab environment
      pool: 'ccoe-vmss-lab-test2'
      variables:
        azurermServiceConnection: 'lab-ccoe-product-team'
      steps:
        - task: TerraformInstaller@0
          displayName: "Install Terraform CLI"
          inputs:
            terraformVersion: '1.3.0'

        - task: TerraformTaskV2@2
          displayName: "Terraform init"
          inputs:
            provider: 'azurerm'
            command: 'init'
            workingDirectory: '$(workingDirectory)'
            backendServiceArm:  ${{ variables.azurermServiceConnection }}
            subscriptionid: "0d6d2ddd-df28-49de-bd13-868298d5dbae"
            backendAzureRmStorageAccountName: 'stapdtconsumweu1l001'
            backendAzureRmResourceGroupName: 'rsg-pdtconsum-weu1-l-021'
            backendAzureRmContainerName: 'products-samples'
            backendAzureRmKey: 'ccoe.naming.web.lab.tfstate'

        - task: TerraformTaskV2@2
          displayName: "Terraform plan"
          inputs:
            provider: 'azurerm'
            command: 'plan'
            workingDirectory: '$(workingDirectory)'
            commandOptions: >-
              -var="environment=Lab"
              -out app.plan
            environmentServiceNameAzureRM:  ${{ variables.azurermServiceConnection }}

        - task: TerraformTaskV1@0
          displayName: "Terraform apply"
          inputs:
            provider: 'azurerm'
            command: 'apply'
            workingDirectory: '$(workingDirectory)'
            commandOptions: 'app.plan'
            environmentServiceNameAzureRM:  ${{ variables.azurermServiceConnection }}

  - stage: Corp
    jobs:
    - job: Deploy_Corp
      displayName: Deploy Corp environment
      pool: 'ccoe-container-corp-westeurope-all'
      variables:
        azurermServiceConnection: 'corp-sub-product-p-prodcert-01'
      steps:
        - task: TerraformInstaller@0
          displayName: "Install Terraform CLI"
          inputs:
            terraformVersion: '1.3.0'

        - task: TerraformTaskV2@2
          displayName: "Terraform init"
          inputs:
            provider: 'azurerm'
            command: 'init'
            workingDirectory: '$(workingDirectory)'
            backendServiceArm:  ${{ variables.azurermServiceConnection }}
            backendAzureRmResourceGroupName: 'rsg-prdcrt-weu1-p-021'
            backendAzureRmStorageAccountName: 'staprdcrtweu1p001'
            backendAzureRmContainerName: 'tfs-prdcrt-weu1-p-001'
            backendAzureRmKey: 'ccoe.naming.web.corp.tfstate'

        - task: TerraformTaskV2@2
          displayName: "Terraform plan"
          inputs:
            provider: 'azurerm'
            command: 'plan'
            workingDirectory: '$(workingDirectory)'
            commandOptions: >-
              -var="environment=Production"
              -out app.plan
            environmentServiceNameAzureRM:  ${{ variables.azurermServiceConnection }}

        - task: TerraformTaskV1@0
          displayName: "Terraform apply"
          inputs:
            provider: 'azurerm'
            command: 'apply'
            workingDirectory: '$(workingDirectory)'
            commandOptions: 'app.plan'
            environmentServiceNameAzureRM:  ${{ variables.azurermServiceConnection }}
